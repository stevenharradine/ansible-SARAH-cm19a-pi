- hosts: cm19a
  remote_user: pi
  vars:
    haproxy_repository_source: https://github.com/stevenharradine/playbook-x10-cm19a-pi/blob/master/files/
    haproxy_package_name: haproxy_1.5.10-1_armhf.deb

  tasks:
  - name: Install software | apt
    apt:
      pkg: "{{ item }}"
      state: latest
    with_items:
      - htop
      - git
      - python
      - libusb-1.0-0
      - nodejs
      - npm

  - name: install haproxy
    become: yes
    become_user: root
    ignore_errors: yes
    command: "{{ item }}"
    with_items:
      - "wget {{ haproxy_repository_source }}{{ haproxy_package_name }} -O /tmp/{{ haproxy_package_name }} --no-check-certificate"
      - "dpkg -i /tmp/{{ haproxy_package_name }}"
      - "wget {{ haproxy_repository_source }}etc/init.d/haproxy -O /etc/init.d/haproxy --no-check-certificate"
      - chmod +x /etc/init.d/haproxy
      - update-rc.d haproxy defaults
      - adduser --group --system --no-create-home --disabled-password --disabled-login haproxy

  - name: Copy haproxy config
    become: yes
    become_user: root
    copy:
      src: files/haproxy.cfg
      dest: /etc/haproxy/haproxy.cfg
      owner: root
      group: root

  # - name: enable haproxy
  #   sudo: true
  #   sudo_user: root
  #   lineinfile:
  #     dest: /etc/default/haproxy
  #     regexp: ^ENABLED=
  #     line: ENABLED=1

  - name: create combined ssl.pem
    become: yes
    become_user: root
    ignore_errors: yes
    command: "{{ item }}"
    with_items:
      - rm /etc/haproxy/ssl.pem
      - touch /etc/haproxy/ssl.pem
      - sudo bash -c 'cat /home/pi/server.key >> /etc/haproxy/ssl.pem'
      - sudo bash -c 'cat /home/pi/server.crt >> /etc/haproxy/ssl.pem'

  - name: restart haproxy
    service:
      name: haproxy
      state: restarted

  - name: symlink node
    file:
      src: /usr/bin/nodejs
      dest: /usr/bin/node
      owner: www-data
      group: www-data
      state: link

  - name: Checkout PyUSB
    git:
      repo: https://github.com/walac/pyusb.git
      dest: /home/pi/pyusb
      version: master
      force: yes

  - name: Install PyUSB
    become: yes
    become_user: root
    shell: "cd /home/pi/pyusb && python setup.py install"

  - name: Checkout pycm19a driver
    git:
      repo: https://github.com/stevenharradine/pycm19a.git
      dest: /home/pi/pycm19a
      version: master
      force: yes

  - name: Create cm19a folder
    file:
      path: /home/pi/pycm19a/cm19a/
      state: directory
      owner: pi
      group: pi
      mode: 0755

  - name: Create named pipes (in/out)
    shell: "sudo -u pi mkfifo /home/pi/pycm19a/cm19a/{{ item }}"
    ignore_errors: yes
    with_items:
      - in
      - out

  - name: cm19a server | cron
    become: yes
    become_user: root
    cron:
      name: "cm19a server"
      special_time: reboot
      job: "sudo python2 /home/pi/pycm19a/pycm19a-pyusb0.py < /home/pi/pycm19a/cm19a/in > /home/pi/pycm19a/cm19a/out"

  - name: cm19a | pipe joining | cron
    become: yes
    become_user: root
    cron:
      name: "cm19a server pipe joining"
      special_time: reboot
      job: "cat /home/pi/pycm19a/cm19a/out"

  - name: Own USB device
    become: yes
    become_user: root
    file:
      path: "/dev/bus/usb/`lsusb | grep X10 | awk '{ print $2 }'`/`lsusb | grep X10 | awk '{ print $4 }' | cut -d':' -f 1`"
      state: directory
      owner: pi
      mode: 0600

  - name: Checkout cm19a service
    git:
      repo: https://github.com/stevenharradine/service-cm19a.git
      dest: /home/pi/service-cm19a
      version: master
      force: yes

  - name: remote service | cm19a | cron
    become: yes
    become_user: root
    cron:
      name: "cm19a remote service"
      special_time: reboot
      job: "/usr/bin/nodejs /home/pi/service-cm19a/app.js"
  - name: remote service | haproxy | cron
    become: yes
    become_user: root
    cron:
      name: "haproxy service"
      special_time: reboot
      job: "/usr/local/sbin/haproxy -f /etc/haproxy/haproxy.cfg"
  - name: remote service | mounts (need to convert to fstab) | cron
    become: yes
    become_user: root
    cron:
      name: "{{ item.name }}"
      special_time: reboot
      job: "{{ item.job }}"
    with_items:
      - {name: "sda", job: "/bin/mount /dev/sda1 /home/pi/sda"}
      - {name: "sdb", job: "/bin/mount /dev/sdb1 /home/pi/sdb"}

